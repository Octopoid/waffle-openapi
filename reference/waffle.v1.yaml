openapi: 3.0.0
tags:
  - name: Waffle
info:
  title: Waffle
  version: 1.0.0-pre1
  contact:
    name: Support
    url: 'https://waffle.rest/support'
    email: support@waffle.rest
  termsOfService: 'https://waffle.rest/v1/terms'
  license:
    name: License
    url: 'https://waffle.rest/v1/license'
  description: test
servers:
  - url: 'https://waffle.rest/v1'
    description: Production Server
paths:
  /token:
    post:
      tags: []
      summary: Post login details to the platform.
      operationId: post-token
      responses:
        '200':
          description: OK
      description: |-
        Posts a username and password to the platform.

        If these are valid, you will recieve a 200 response with a JWT token in the response headers.

        If they are not valid, you will recieve a 401 response.
      security: []
    delete:
      tags: []
      description: Revokes your current bearer token.
      summary: Revokes a bearer token.
      operationId: delete-token
      responses:
        '200':
          description: OK
    head:
      tags: []
      summary: ''
      operationId: head-token
      responses:
        '200':
          description: OK
    options:
      tags: []
      summary: ''
      operationId: options-token
      responses:
        '200':
          description: OK
  /users:
    put:
      tags: []
      summary: Create a user account.
      operationId: put-users
      responses:
        '200':
          description: OK
      description: Create a user account in the system.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user-view'
        description: The full user model for creating a new system user.
    patch:
      tags: []
      summary: ''
      operationId: patch-users
      responses:
        '200':
          description: OK
    get:
      summary: Get details about a user.
      operationId: get-users
      responses:
        '200':
          description: OK
      description: Gets information about a user. Only available on users within teams of which you are a member.
  /teams:
    put:
      tags: []
      summary: ''
      operationId: put-teams
      responses:
        '200':
          description: OK
  '/teams/{id}':
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user-view'
      operationId: get-teams-id
      description: Get's details about a given team. You will require read access to the team.
components:
  schemas:
    login:
      title: Login
      type: object
      properties:
        username:
          type: string
          example: user001
        password:
          type: string
          format: password
          example: password1
    user-view:
      title: user-view
      type: object
      x-examples: {}
      properties:
        id:
          type: integer
          example: 1
        avatar:
          type: integer
          example: 1
        accountCreated:
          type: string
          format: date-time
          example: '2020-10-03T17:32:28Z'
        displayName:
          type: string
          example: Example User
        nameFirst:
          type: string
          example: Example
        nameLast:
          type: string
          example: User
        teams:
          type: array
          items:
            $ref: '#/components/schemas/team-view-stub'
      required:
        - id
        - accountCreated
        - displayName
        - teams
    team-view:
      title: team-view
      type: object
      x-examples: {}
      properties:
        id:
          type: integer
          example: 1
        displayName:
          type: string
          example: Baffled Crab
        legalName:
          type: string
          example: Baffled Crab Ltd.
        subscription:
          type: string
          enum:
            - Free
            - Indie
            - Pro
          example: Pro
        users:
          type: array
          items:
            $ref: '#/components/schemas/user-view-stub'
      required:
        - id
        - displayName
        - subscription
        - users
    team-view-stub:
      title: team-view-stub
      type: object
      properties:
        id:
          type: integer
          example: 1
          format: int32
        displayName:
          type: string
          example: Baffled Crab
        legalName:
          type: string
          example: Baffled Crab Ltd.
        users:
          type: array
          items:
            type: integer
            example: 1
            format: int32
      required:
        - id
        - displayName
        - users
    user-view-stub:
      title: user-view-stub
      type: object
      properties:
        id:
          type: integer
          example: 1
        avatar:
          type: integer
          example: 1
        accountCreated:
          type: string
          format: date-time
          example: '2020-10-03T17:32:28Z'
        displayName:
          type: string
          example: Example User
        nameFirst:
          type: string
          example: Example
        nameLast:
          type: string
          example: User
        teams:
          type: array
          items:
            type: integer
            format: int32
            example: 1
      required:
        - id
        - accountCreated
        - displayName
        - teams
    'json:api-version':
      title: 'json:api-version'
      type: object
      properties:
        version:
          type: string
          example: '1.0'
          default: '1.0'
    'json:api-error':
      title: 'json:api-error'
      type: object
      description: Error objects provide additional information about problems encountered while performing an operation.
      properties:
        id:
          type: string
          description: A unique identifier for this particular occurrence of the problem.
        links:
          type: array
          items:
            $ref: '#/components/schemas/json:api-links'
        status:
          type: string
          description: 'The HTTP status code applicable to this problem, expressed as a string value.'
        code:
          type: string
          description: 'An application-specific error code, expressed as a string value.'
        title:
          type: string
          description: 'A short, human-readable summary of the problem that should not change from occurrence to occurrence of the problem, except for purposes of localization.'
        detail:
          type: string
          description: 'A human-readable explanation specific to this occurrence of the problem. Like title, this fieldâ€™s value can be localized.'
        source:
          type: array
          description: An object containing references to the source of the error.
          items:
            type: object
            description: An object containing references to the source of the error.
            properties:
              pointer:
                type: string
                description: |-
                  A JSON Pointer [RFC6901] to the associated entity in the request document.

                  e.g. "/data" for a primary data object, or "/data/attributes/title" for a specific attribute.
              parameter:
                type: string
                description: A string indicating which URI query parameter caused the error.
        meta:
          $ref: '#/components/schemas/json:api-meta'
    'json:api-meta':
      title: 'json:api-meta'
      anyOf:
        - properties:
            copyright:
              type: string
            authors:
              type: string
      type: object
    'json:api-link':
      title: 'json:api-link'
      anyOf:
        - properties:
            related:
              type: object
              properties:
                href:
                  type: string
                meta:
                  type: string
            self:
              type: string
            first:
              type: string
            last:
              type: string
            prev:
              type: string
            next:
              type: string
      type: object
    'json:api-resource':
      title: 'json:api-resource'
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: string
        relationships:
          type: string
        links:
          type: string
        meta:
          type: string
      required:
        - id
        - type
  parameters:
    id:
      name: id
      in: path
      schema:
        type: integer
      required: true
      description: Database ID for the current entity.
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
security:
  - JWT: []
